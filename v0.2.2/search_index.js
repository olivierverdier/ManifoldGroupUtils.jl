var documenterSearchIndex = {"docs":
[{"location":"#ManifoldGroupUtils.jl","page":"ManifoldGroupUtils.jl","title":"ManifoldGroupUtils.jl","text":"","category":"section"},{"location":"","page":"ManifoldGroupUtils.jl","title":"ManifoldGroupUtils.jl","text":"A collection of functions to be used with groups in the Manifolds.jl package.","category":"page"},{"location":"","page":"ManifoldGroupUtils.jl","title":"ManifoldGroupUtils.jl","text":"The main function is compose_matrix_op.","category":"page"},{"location":"","page":"ManifoldGroupUtils.jl","title":"ManifoldGroupUtils.jl","text":"Modules = [ManifoldGroupUtils]\nOrder = [:type, :function]","category":"page"},{"location":"#ManifoldGroupUtils.algebra-Tuple{Any}","page":"ManifoldGroupUtils.jl","title":"ManifoldGroupUtils.algebra","text":"algebra(G)\n\nThe tangent space at identity of the group G.\n\n\n\n\n\n","category":"method"},{"location":"#ManifoldGroupUtils.compose_lie_matrix_op-Tuple{Any, Any, Any, ManifoldsBase.AbstractBasis}","page":"ManifoldGroupUtils.jl","title":"ManifoldGroupUtils.compose_lie_matrix_op","text":"compose_lie_matrix_op(\n    G, # group\n    op, # operator Alg(G) -> Alg(G)\n    mat, # matrix in the basis\n    B # basis of Alg(G)\n    )\n\nCompute the matrix in the basis B of the composition of op a linear endomorphism  of Alg(G) and a matrix mat, also expressed in the basis B.\n\n\n\n\n\n","category":"method"},{"location":"#ManifoldGroupUtils.compose_matrix_op-Tuple{Any, Any, Any, Any, Any, ManifoldsBase.AbstractBasis, ManifoldsBase.AbstractBasis}","page":"ManifoldGroupUtils.jl","title":"ManifoldGroupUtils.compose_matrix_op","text":"compose_matrix_op(\n  G, # group\n  M,p, # Manifold, point\n  op, # operator Alg(G) -> T_pM\n  mat, # matrix in basis BG\n  BG, # basis of Alg(G)\n  BM, # basis of T_pM\n  )\n\nCompose a matrix mat of a linear endomorphism of Alg(G) in some basis BG with an operator op : Alg(G)  T_p M itself equipped with a basis BM.\n\n\n\n\n\n","category":"method"},{"location":"#ManifoldGroupUtils.get_id_matrix_lie-Tuple{Any}","page":"ManifoldGroupUtils.jl","title":"ManifoldGroupUtils.get_id_matrix_lie","text":"get_id_matrix_lie(G)\n\nThe identity matrix on the Lie algebra of the group G.\n\n\n\n\n\n","category":"method"},{"location":"#ManifoldGroupUtils.get_op_matrix-Tuple{Any, Any, Any, Any, ManifoldsBase.AbstractBasis, ManifoldsBase.AbstractBasis}","page":"ManifoldGroupUtils.jl","title":"ManifoldGroupUtils.get_op_matrix","text":"get_op_matrix(G, # group\n  M, p, # manifold + point\n  op, # operator from Alg(G) -> T_pM\n  BG, # Lie algebra basis\n  BM, # basis at T_pM\n  )\n\nMatrix of an operator op : Alg(G)  T_p M computed in the basis BG and BM.\n\n\n\n\n\n","category":"method"},{"location":"#ManifoldGroupUtils.get_proj_matrix-Tuple{Manifolds.AbstractGroupAction, Any, Any, Any}","page":"ManifoldGroupUtils.jl","title":"ManifoldGroupUtils.get_proj_matrix","text":"get_proj_matrix(A::GroupAction, x, BG, BM)\n\nFrom a group action G  Diff(M), and a point x  M, compute the projection matrix in the basis BG of Alg(G) and BM of T_x M of the operator ξ  ξ x, where  denotes the infinitesimal group action above.\n\n\n\n\n\n","category":"method"},{"location":"#ManifoldGroupUtils.matrix_from_lin_endomorphism-Tuple{Any, Any, ManifoldsBase.AbstractBasis}","page":"ManifoldGroupUtils.jl","title":"ManifoldGroupUtils.matrix_from_lin_endomorphism","text":"matrix_from_lin_endomorphism(\n    G, # group\n    op, # Alg(G) -> Alg(G)\n    B # basis of Alg(G)\n    )\n\nCompute the matrix in the basis B  of an operator op on a Lie algebra Alg(G).\n\n\n\n\n\n","category":"method"},{"location":"#ManifoldGroupUtils.rand_lie-Tuple{Any, Any}","page":"ManifoldGroupUtils.jl","title":"ManifoldGroupUtils.rand_lie","text":"rand_lie(rng::AbstractRNG, G)\n\nRandom element in the Lie algebra of the group G.\n\n\n\n\n\n","category":"method"},{"location":"#ManifoldGroupUtils.translate_from_id-Tuple{Any, Any, Any, Manifolds.LeftSide}","page":"ManifoldGroupUtils.jl","title":"ManifoldGroupUtils.translate_from_id","text":"translate_from_id(G, χ, ξ, ::GroupActionSide)\n\nThe left translation T_L(gξ) = gξ for the Left side,  or right translation T_R(gξ) = ξg for the Right side.\n\n\n\n\n\n","category":"method"},{"location":"#ManifoldGroupUtils.translate_to_id-Tuple{Any, Any, Any, Manifolds.RightSide}","page":"ManifoldGroupUtils.jl","title":"ManifoldGroupUtils.translate_to_id","text":"translate_to_id(G, χ, v, ::GroupActionSide)\n\nCompute η = v χ¹, or χ¹ v depending on whether the group action side is Right or Left respectively.\n\n\n\n\n\n","category":"method"}]
}
